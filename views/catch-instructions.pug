h6(id="catchDataStructure") Catch Data Structure

p(class="inst-desc")
    | EM review and logbook submissions share a common structure:
    | trip details including a hauls (sets) array,
    | each haul containing haul details and a catch array,
    | with each catch containing catch details:

p(class="inst-desc" style="background-color: lightblue; padding: 10px")
    | trip details
    br
    | &nbsp;&nbsp;hauls [
    br
    | &nbsp;&nbsp;&nbsp;&nbsp;haul details
    br
    | &nbsp;&nbsp;&nbsp;&nbsp;catch [
    br
    | &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;catch details
    br
    | &nbsp;&nbsp;&nbsp;&nbsp;]
    br
    | ]

div(style="padding-left: 30px")
    h6(id="submissionFields") Submission Fields
    p(class="inst-desc") For a complete list of fields, data types, and descriptions, see ‘TripCatch’, ‘Haul’, and ‘Catch’ in the schemas section at the bottom of:
        a(class='nav-link' href='./docs') API Docs

    h6(id="tripFields") Required Trip Fields
    p(class="inst-desc") buyers⁵, departureDateTime, departurePortCode, departureState, fishery, fisherySector⁴, isEFPTrip, isObserved, provider, resubmission, returnDateTime, returnPortCode, returnPortState, reviewerName⁴, source, submissionDatetime, tripNum, totalReviewTime⁴, vesselName, vesselNumber, year

    h6(id="haulFields") Required Haul Fields
    p(class="inst-desc") avgHooksPerSeg¹, catchHandlingPerformance, codendCapacity², endDateTime, endDepth, endLatitude, endLongitude, gear, gearLost¹, gearPerSet¹, haulNum, isCodendLost², netType², startDateTime, startDepth, startLatitude, startLongitude, systemPerformance

    h6(id="catchFields") Required Catch Fields
    p(class="inst-desc") calcWeightType, disposition, fate⁶, speciesCode, speciesCount³, speciesLength³, speciesWeight³, timeOnDeck⁷

    | ¹ - required if gear = 'hook & line', 'fish pot', or 'longline (snap)'
    br
    | ² - required if gear = 'trawl'
    br
    | ³ - one of speciesWeight, speciesCount, speciesLength is required
    br
    | ⁴ - required for review only
    br
    | ⁵ - required for logbook only
    br
    | ⁶ - if disposition = 'Discarded' - review only
    br
    | ⁷ - required only if speciesCode = 101 (Pacific Halibut) - review only
    br
    br

div(style="padding-left: 30px")
    h6(id="lengthandTODSubmissions") Length & Pacific Halibut timeOnDeck
    p(class="inst-desc") Catch submissions which inculde lengths and/or timeOnDeck (Pacific Halibut only) values should be supplied as individual catch rows:
        br
        br
        |...catch: [
        br
        |&nbsp;&nbsp;{
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;"disposition": "Discarded",
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;"fate": "1",
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;"speciesCode": 101,
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;"speciesLength": 100,
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;"timeOnDeck": 5
        br
        |&nbsp;&nbsp;},
        br
        |&nbsp;&nbsp;{
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;"disposition": "Discarded",
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;"fate": "1",
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;"speciesCode": 101,
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;"speciesLength": 93,
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;"timeOnDeck": 7
        br
        |&nbsp;&nbsp;},
        br
        |&nbsp;&nbsp;{
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;"disposition": "Discarded",
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;"fate": "1",
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;"speciesCode": 306,
        br
        |&nbsp;&nbsp;&nbsp;&nbsp;"speciesLength": 53
        br
        |&nbsp;&nbsp;}
        br
        | ]
        br

h6(id="submitLogbook") Submit Logbook Data
p(class="inst-desc") Transcribed logbook data is submitted via POST request to&nbsp;
    b /tripCatch[tripNum]&nbsp;
    | Note: tripNum is required in the path. Logbook data belongs in the request body (ideally in JSON format, but XML is also supported). The value of "source" the request body should be "logbook". Alternately, logbook data can be entered via the Boatnet E Logbook - see e logbook section.
    br
    iframe(scrolling="no" src="./api-docs/#/Catch/post_tripCatch__tripNum_" style="width: 100%; height: 850px")

h6(id="updateLogbook") Update Logbook Data
p(class="inst-desc") Updated logbook data is submitted via PUT request to&nbsp;
    b /tripCatch[tripNum]&nbsp;
    br
    span Note: updated submissions should include "resubmission": true
    iframe(scrolling="no" src="./api-docs/#/Catch/put_tripCatch__tripNum_" style="width: 100%; height: 850px")

h6(id="submitReview") Submit EM Review
p(class="inst-desc") EM review summary data is submitted via POST request to&nbsp;
    b /tripCatch[tripNum]&nbsp;
    | Note: tripNum is required in the path. Logbook data belongs in the request body (ideally in JSON format, but XML is also supported). The value of "source" the request body should be "thirdParty".
    br
    iframe(scrolling="no" src="./api-docs/#/Catch/post_tripCatch__tripNum_" style="width: 100%; height: 850px")

h6(id="updateReview") Update EM Review
p(class="inst-desc") Updated review data is submitted via PUT request to&nbsp;
    b /tripCatch[tripNum]&nbsp;
    br
    span Note: updated submissions should include "resubmission": true
    iframe(scrolling="no" src="./api-docs/#/Catch/put_tripCatch__tripNum_" style="width: 100%; height: 850px")